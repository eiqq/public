**Assignment 3: Maze Game**의 자세한 요약은 다음과 같습니다. 이 과제에서는 몇 가지 주요 요구 사항과 작업을 충족해야 하며, 필수적으로 구현해야 할 클래스와 기능이 명시되어 있습니다.

### 1. 게임 설명
- 플레이어는 쥐를 조종하여 미로 속에서 치즈를 찾아다니며, 고양이에게 잡히지 않고 모든 치즈를 모아야 승리합니다.
- 고양이는 무작위로 움직이며, 플레이어가 고양이와 같은 칸에 있을 경우 플레이어가 패배합니다.
- 미로는 처음에는 숨겨져 있으며, 플레이어가 이동할 때 주변 칸이 드러납니다.

### 2. 요구 사항

#### 2.1 게임 플레이 요구 사항
- **미로 크기**: 20x15 크기의 미로이며, 외곽에는 벽이 있어야 합니다.
- **랜덤 미로 생성**: 미로는 랜덤 생성 알고리즘을 사용해 만들어져야 하며, 연결되지 않은 경로가 없어야 합니다.
  - 2x2 크기의 빈 공간이나 벽으로 둘러싸인 공간이 없도록 해야 합니다.
- **게임 요소**:
  - 쥐(플레이어)는 미로의 왼쪽 상단에서 시작합니다.
  - 고양이는 각 모서리에서 시작합니다.
  - 치즈는 미로 내에서 랜덤하게 배치되며, 벽이나 쥐가 있는 칸에는 놓일 수 없습니다.
- **승리 조건**: 플레이어는 5개의 치즈를 모아야 승리합니다.
- **패배 조건**: 고양이와 같은 칸에 도달하면 패배합니다.

#### 2.2 구현 및 디자인 제약
- **텍스트 기반 인터페이스**를 사용해야 하며, **키보드 입력**으로 게임을 제어합니다.
- 게임의 **객체 지향 설계(OOD)**는 다음을 충족해야 합니다:
  - 게임 로직과 UI는 별도의 패키지로 관리되어야 합니다.
  - 모델 패키지는 UI와 분리되어 재사용 가능해야 합니다 (예: 텍스트 UI 외에 웹 UI에서도 재사용 가능해야 함).
  - 각 클래스는 명확한 역할을 가지고, **캡슐화**를 잘 지켜야 합니다.
  - **불변 클래스**를 적용할 수 있는 곳에는 적용해야 합니다.
- 최소한 **3개의 스트림**을 코드에서 사용해야 합니다 (입출력 처리).

### 3. 과제 요구사항 및 작업

#### 3.1 디자인
1. **CRC 카드** 작성: 클래스의 이름, 책임, 협력 관계를 명시하는 CRC 카드를 작성하여 제출합니다.
2. **UML 클래스 다이어그램**: 객체지향 설계를 설명하는 UML 다이어그램을 만들어 제출합니다.
3. **OOD 설명**: 게임의 주요 동작 중 두 가지를 선택하여 객체지향 설계가 이를 어떻게 지원하는지 설명합니다.

#### 3.2 구현
- 게임은 Java로 구현해야 하며, 설계 단계에서 작성한 OOD를 기반으로 합니다.
- 미로는 랜덤으로 생성되어야 하며, 고양이는 특정 규칙에 따라 무작위로 움직여야 합니다.

### 4. 제출물
1. CRC 카드 파일 (txt, pdf 또는 jpg)
2. UML 클래스 다이어그램 (pdf 또는 이미지 파일)
3. 객체지향 설계 설명 파일 (txt 또는 pdf)
4. 모든 코드와 관련 파일을 **ZIP 파일**로 제출

### 요약
이 과제는 객체 지향 설계를 강조하며, 텍스트 기반의 미로 탐색 게임을 구현하는 것이 목표입니다. **필수 클래스**나 **패키지** 구조는 주어진 요구 사항에 따라 다르겠지만, 모델과 UI를 구분하고 각 객체가 자신의 역할에 맞게 동작하도록 설계하는 것이 중요합니다.

필수로 구현해야 하는 **구체적인 클래스 이름**은 제시되지 않았지만, **모델 클래스**와 **UI 클래스**가 분리되어야 한다는 점, 각 객체가 명확한 책임을 가져야 한다는 점에서 **쥐(Mouse)**, **고양이(Cat)**, **미로(Maze)**, **게임(Game)** 등과 같은 클래스가 필요할 가능성이 높습니다【7†source】.